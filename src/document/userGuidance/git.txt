git add 文件名   (提交一个文件)
git add .        (提交所有修改或添加的文件)   添加文件到repository(版本库)  其实是提交的到缓存区
git commit -m "说明"  把文件提交到本地repository(版本库)
git push 从本地分支提交到远程repository(版本库)
git clone 地址 克隆到本地
q 退出

git status 查看当前分支修改文件状态
git diff 查看文件修改的内同


在github上新建完repositiry后,进入到本地文件,执行以下命令
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:Yancy19/DotNet.git
git push -u origin master


用git pull来更新代码的时候，遇到了下面的问题：

error: Your local changes to the following files would be overwritten by merge:   
Please, commit your changes or stash them before you can merge.  
Aborting
出现这个问题的原因是其他人修改了xxx.php并提交到版本库中去了，而你本地也修改了xxx.php，这时候你进行git pull操作就好出现冲突了，解决方法，在上面的提示中也说的很明确了。

1、保留本地的修改 的改法

1）直接commit本地的修改

2）通过git stash

git stash
git pull
git stash pop
通过git stash将工作区恢复到上次提交的内容，同时备份本地所做的修改，之后就可以正常git pull了，git pull完成后，执行git stash pop将之前本地做的修改应用到当前工作区。

git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。

git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。

git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。

git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。

2、放弃本地修改 的改法

git reset --hard
git pull